{"version":3,"sources":["components/Profile/Profile.module.css","components/FriendList/FriendList.module.css","components/Statistics/Statistics.module.css","components/TransactionHistory/TransactionHistory.module.css","components/Profile/Profile.js","components/Statistics/Statistics.js","components/FriendList/FriendItem.js","components/FriendList/FriendList.js","components/TransactionHistory/TransactionHistory.js","App.js","index.js"],"names":["module","exports","Profile","name","tag","location","avatar","followers","views","likes","className","s","profile","description","src","alt","stats","label","quantity","Statistics","title","statistics","statList","map","stat","item","style","backgroundColor","Math","floor","random","toString","percentage","id","FriendItem","isOnline","online","offline","width","FriendList","friends","friendList","friend","TransactionHistory","transactions","transactionHistory","transaction","type","amount","currency","App","user","statisticalData","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aec5d171.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__2iOgW\",\"description\":\"Profile_description__2EMDi\",\"tag\":\"Profile_tag__3zQDb\",\"location\":\"Profile_location__GwpfQ\",\"avatar\":\"Profile_avatar__3sfHD\",\"name\":\"Profile_name__22lNQ\",\"stats\":\"Profile_stats__2evmS\",\"label\":\"Profile_label__3mqxe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendList\":\"FriendList_friendList__CJEJW\",\"online\":\"FriendList_online__1knVO\",\"offline\":\"FriendList_offline__2yy59\",\"avatar\":\"FriendList_avatar__1_gdb\",\"name\":\"FriendList_name__rC9s4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__2Ku74\",\"title\":\"Statistics_title__3UMVX\",\"statList\":\"Statistics_statList__1TvbY\",\"item\":\"Statistics_item__txgMz\",\"label\":\"Statistics_label__XN_4v\",\"percentage\":\"Statistics_percentage__1W5GN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"TransactionHistory_transactionHistory__26Neq\"};","import PropTypes from 'prop-types';\nimport s from './Profile.module.css';\n\nexport default function Profile({\n  name,\n  tag,\n  location,\n  avatar,\n  followers,\n  views,\n  likes,\n}) {\n  return (\n    <div className={s.profile}>\n      <div className={s.description}>\n        <img src={avatar} alt=\"Аватар пользователя\" className={s.avatar} />\n        <p className={s.name}>{name}</p>\n        <p className={s.tag}>{tag}</p>\n        <p className={s.location}>{location}</p>\n      </div>\n\n      <ul className={s.stats}>\n        <li>\n          <span className={s.label}>Followers</span>\n          <span className={s.quantity}>{followers}</span>\n        </li>\n        <li>\n          <span className={s.label}>Views</span>\n          <span className={s.quantity}>{views}</span>\n        </li>\n        <li>\n          <span className={s.label}>Likes</span>\n          <span className={s.quantity}>{likes}</span>\n        </li>\n      </ul>\n    </div>\n  );\n}\n\nProfile.propTypes = {\n  name: PropTypes.string,\n  tag: PropTypes.string,\n  location: PropTypes.string,\n  avatar: PropTypes.string,\n  followers: PropTypes.number,\n  views: PropTypes.number,\n  likes: PropTypes.number,\n};\n","import PropTypes from 'prop-types';\nimport s from './Statistics.module.css';\n\nexport default function Statistics({ title, stats }) {\n  return (\n    <section className={s.statistics}>\n      {title && <h2 className={s.title}>Upload stats</h2>}\n\n      <ul className={s.statList}>\n        {stats.map(stat => (\n          <li\n            className={s.item}\n            key={stat.id}\n            style={{\n              backgroundColor:\n                '#' +\n                Math.floor(Math.random() * 256).toString(16) +\n                Math.floor(Math.random() * 256).toString(16) +\n                Math.floor(Math.random() * 256).toString(16),\n            }}\n          >\n            <span className={s.label}>{stat.label}</span>\n            <span className={s.percentage}>{stat.percentage}%</span>\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n}\n\nStatistics.propTypes = {\n  title: PropTypes.string,\n  stats: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n      percentage: PropTypes.number.isRequired,\n    }),\n  ),\n};\n","import PropTypes from 'prop-types';\nimport s from './FriendList.module.css';\n\nexport default function FriendItem({ avatar, name, isOnline }) {\n  return (\n    <>\n      <span className={isOnline ? s.online : s.offline}>{isOnline}</span>\n      <img className={s.avatar} src={avatar} alt={name} width=\"48\" />\n      <p className={s.name}>{name}</p>\n    </>\n  );\n}\n\nFriendItem.propTypes = {\n  isOnline: PropTypes.bool.isRequired,\n  avatar: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport FriendItem from './FriendItem';\nimport s from './FriendList.module.css';\n\nexport default function FriendList({ friends }) {\n  return (\n    <ul className={s.friendList}>\n      {friends.map(friend => (\n        <li key={friend.id}>\n          <FriendItem\n            isOnline={friend.isOnline}\n            avatar={friend.avatar}\n            name={friend.name}\n          />\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    }),\n  ),\n};\n","import PropTypes from 'prop-types';\nimport s from './TransactionHistory.module.css';\n\nexport default function TransactionHistory({ transactions }) {\n  return (\n    <table className={s.transactionHistory}>\n      <thead>\n        <tr>\n          <th>Type</th>\n          <th>Amount</th>\n          <th>Currency</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {transactions.map(transaction => (\n          <tr key={transaction.id}>\n            <td>{transaction.type}</td>\n            <td>{transaction.amount}</td>\n            <td>{transaction.currency}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n}\n\nTransactionHistory.propTypes = {\n  transactions: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      amount: PropTypes.string.isRequired,\n      currency: PropTypes.string.isRequired,\n    }),\n  ),\n};\n","import Profile from './components/Profile/Profile';\nimport Statistics from './components/Statistics/Statistics';\nimport FriendList from './components/FriendList/FriendList';\nimport TransactionHistory from './components/TransactionHistory/TransactionHistory';\nimport user from './components/Profile/user.json';\nimport statisticalData from './components/Statistics/statistical-data.json';\nimport friends from './components/FriendList/friends.json';\nimport transactions from './components/TransactionHistory/transactions.json';\n\nexport default function App() {\n  return (\n    <div>\n      <Profile\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        followers={user.stats.followers}\n        views={user.stats.views}\n        likes={user.stats.likes}\n      />\n      <Statistics title=\"Upload stats\" stats={statisticalData} />\n      <FriendList friends={friends} />\n      <TransactionHistory transactions={transactions} />;\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// import React from 'react';\n// import ReactDOM from 'react-dom';\n// import './index.css';\n// import App from './App';\n// import reportWebVitals from './reportWebVitals';\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\n// // If you want to start measuring performance in your app, pass a function\n// // to log results (for example: reportWebVitals(console.log))\n// // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}